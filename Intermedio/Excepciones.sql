SET SERVEROUTPUT ON

-- EXCEPTIONS PREDEFINIDAS

DECLARE
v_empl employees%ROWTYPE;
BEGIN
    SELECT * 
    INTO v_empl
    FROM employees
    WHERE employee_id<10011;
    DBMS_OUTPUT.PUT_LINE(v_empl.first_name);
EXCEPTION
    WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: MULTIPLES FILAS RECUPERADAS');
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: DATOS NO ENCONTRADOS');
    WHEN LOGIN_DENIED THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: ACCESO DENEGADO');
    WHEN NOT_LOGGED_ON THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: ACCESO DENEGADO');
    WHEN PROGRAM_ERROR THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: CODIFICACION');
    WHEN VALUE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: ARITMETICO / CONVERSION');
    WHEN ZERO_DIVIDE THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: DIVISION/0');
    WHEN INVALID_NUMBER THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: CONVERSION DE DATOS');    
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR NO DEFINIDO: '||SQLCODE||' --> '||SQLERRM);  
END;

-- EXCCEPTIONS GENERALIZADAS

DECLARE
v_empl employees%ROWTYPE;
BEGIN
    SELECT * 
    INTO v_empl
    FROM employees
    WHERE employee_id<10011;
    DBMS_OUTPUT.PUT_LINE(v_empl.first_name);
EXCEPTION   
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR NO DEFINIDO: '||SQLCODE||' --> '||SQLERRM);  
END;

-- EXCEPTIONS DEEFINIDAS POR EL USUARIO

DECLARE
    v_max NUMBER := 100;
    v_min NUMBER := 10;
    v_mivalor NUMBER := 1;
    e_miexception EXCEPTION;
BEGIN
    IF v_mivalor NOT BETWEEN v_min AND v_max THEN
        RAISE e_miexception;
        -- PARA FINALIZAR EL PROGRAMA
        -- RISE_APPLICATION_ERROR(-20001, 'La solicitud dio fin porque....');
    END IF;
EXCEPTION
    WHEN e_miexception THEN
    dbms_output.put_line('ERROR: VALOR NO DENTRO DEL RANGO');
END;

-- USO DE EXCEPTION

DECLARE
    MYREG REGIONS%ROWTYPE;
    REG_ID REGIONS.region_id%TYPE;
BEGIN
    MYREG.REGION_ID := 100;
    MYREG.REGION_NAME := 'AFRICA';
    SELECT REGION_ID
    INTO REG_ID
    FROM REGIONS
    WHERE REGIONS.REGION_ID=MYREG.REGION_ID;
    DBMS_OUTPUT.PUT_LINE('La región ya existe');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        INSERT INTO REGIONS VALUES (MYREG.REGION_ID,MYREG.REGION_NAME);
        COMMIT;
END;

-- RISE_ALPLICATION_ERROR (-20001 TO -20998)

RAISE_APPLICATION_ERROR(-20001, 'La solicitud dio fin porque....');

-- APLICANDO RAE

SET SERVEROUTPUT ON
DECLARE
CONTROL_REGIONES EXCEPTION;
CODIGO NUMBER:=201;
BEGIN
IF codigo > 200 THEN
RAISE control_regiones;
ELSE
INSERT INTO REGIONS VALUES (CODIGO,'PRUEBA');
END IF;
EXCEPTION
WHEN control_regiones THEN
RAISE_APPLICATION_ERROR(-20001,'El codigo debe ser inferior a 200');

when others then
DBMS_OUTPUT.PUT_LINE(SQLCODE);
DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
