CREATE OR REPLACE NONEDITIONABLE TRIGGER TRIGGER1 
AFTER INSERT ON REGIONS 
BEGIN
  INSERT INTO LOG_TABLE VALUES ('DATOS INSERTADOS',USER,'REGIONS');
END;

---------------------------------------------
-- PROBANDO DISARADOR

BEGIN
    INSERT INTO REGIONS VALUES (6,'PERU');
END;


---------------------------------------------

create or replace NONEDITIONABLE TRIGGER TRIGGER2
BEFORE INSERT OR UPDATE OF REGION_NAME OR DELETE
ON REGIONS
BEGIN
    IF INSERTING THEN
        INSERT INTO LOG_TABLE VALUES ('DATOS INSERTADOS',USER,'REGIONS');
    END IF;
    IF UPDATING('REGION_NAME') THEN
        INSERT INTO LOG_TABLE VALUES ('NOMBRE DE REGION ACTUALIZADA',USER,'REGIONS');
    END IF;
    IF DELETING THEN
        INSERT INTO LOG_TABLE VALUES ('DATOS ELIMINADOS',USER,'REGIONS');
    END IF;
    IF USER<>'HR' THEN
        RAISE_APPLICATION_ERROR(-20005,'SOLO HR PUEDETRABAJAR ESTA TABLA');
    END IF;
END;

---------------------------------------------
-- PROBANDO DISARADOR CAMBIANDO DE USUARIO (SYSTEM)

BEGIN
    INSERT INTO REGIONS VALUES (8,'ALEMANIA');
END;

BEGIN
    DELETE FROM REGIONS WHERE REGION_ID =8;
END;

BEGIN
    UPDATE REGIONS SET REGION_ID=10 WHERE REGION_ID=8;
END;


---------------------------------------------
-- TRIGERS TIPO FILA

create or replace NONEDITIONABLE TRIGGER TRIGGER3
BEFORE INSERT OR UPDATE OF REGION_NAME OR DELETE
ON REGIONS
FOR EACH ROW
WHEN (NEW.REGION_ID>1000)
BEGIN
    IF INSERTING THEN
        INSERT INTO LOG_TABLE VALUES ('DATOS INSERTADOS',USER,'REGIONS');
    END IF;
    IF UPDATING THEN
        :NEW.REGION_NAME := UPPER(:NEW.REGION_NAME);
        INSERT INTO LOG_TABLE VALUES ('DATOS ACTUALIZADOS',USER,'REGIONS');
    END IF;
    IF DELETING THEN
        INSERT INTO LOG_TABLE VALUES ('DATOS ',USER,'REGIONS');
    END IF;
    IF USER<>'HR' THEN
        RAISE_APPLICATION_ERROR(-20005,'SOLO HR PUEDETRABAJAR ESTA TABLA');
    END IF;
END;

---------------------------------------------
-- PROBANDO DISPARADOR POR CADA FILA

UPDATE REGIONS SET REGION_NAME=LOWER(REGION_NAME);

---------------------------------------------

DESC USER_TRIGGERS;
DESC USER_TABLES;

---------------------------------------------
-- Triggers compuestos

CREATE OR REPLACE TRIGGER TRIGGER4
FOR UPDATE OR DELETE OR INSERT ON REGIONS
COMPOUND TRIGGER

    BEFORE STATEMENT IS BEGIN
        INSERT INTO LOG_TABLE VALUES('BEFORE STATEMENT',USER,'REGIONS');
    END BEFORE STATEMENT;
    
    AFTER STATEMENT IS BEGIN
        INSERT INTO LOG_TABLE VALUES('AFTER STATEMENT',USER,'REGIONS');
    END AFTER STATEMENT;
    
    BEFORE EACH ROW IS BEGIN
        INSERT INTO LOG_TABLE VALUES('BEFORE EACH ROW',USER,'REGIONS');
    END BEFORE EACH ROW;
    
    AFTER EACH ROW IS BEGIN
        INSERT INTO LOG_TABLE VALUES('AFTER EACH ROW',USER,'REGIONS');
    END AFTER EACH ROW;
    
END TRIGGER4;

----------------------------------------------------
-- TRIGER AVANZADO DONDE SE FILTRAN TODAS LAS POSIBILIDADES Y FORMAS DE ACCIÓN
CREATE OR REPLACE TRIGGER TRIGGER5
FOR UPDATE OR DELETE OR INSERT ON REGIONS
COMPOUND TRIGGER
    
    BEFORE STATEMENT IS BEGIN
        IF INSERTING THEN
            INSERT INTO LOG_TABLE VALUES('BEFORE STATEMENT(I)',USER,'REGIONS');
        END IF;
        IF DELETING THEN
            INSERT INTO LOG_TABLE VALUES('BEFORE STATEMENT(D)',USER,'REGIONS');
        END IF;
        IF UPDATING THEN
            INSERT INTO LOG_TABLE VALUES('BEFORE STATEMENT(U)',USER,'REGIONS');
        END IF;
    END BEFORE STATEMENT;
    
    AFTER STATEMENT IS BEGIN
        IF INSERTING THEN
            INSERT INTO LOG_TABLE VALUES('AFTER STATEMENT(I)',USER,'REGIONS');
        END IF;
        IF DELETING THEN
            INSERT INTO LOG_TABLE VALUES('AFTER STATEMENT(D)',USER,'REGIONS');
        END IF;
        IF UPDATING THEN
            INSERT INTO LOG_TABLE VALUES('AFTER STATEMENT(U)',USER,'REGIONS');
        END IF;
    END AFTER STATEMENT;
    
    BEFORE EACH ROW IS BEGIN
        IF INSERTING THEN
            INSERT INTO LOG_TABLE VALUES('BEFORE EACH ROW(I)',USER,'REGIONS');
        END IF;
        IF DELETING THEN
            INSERT INTO LOG_TABLE VALUES('BEFORE EACH ROW(D)',USER,'REGIONS');
        END IF;
        IF UPDATING THEN
            INSERT INTO LOG_TABLE VALUES('BEFORE EACH ROW(U)',USER,'REGIONS');
        END IF;
    END BEFORE EACH ROW;
    
    AFTER EACH ROW IS BEGIN
        IF INSERTING THEN
            INSERT INTO LOG_TABLE VALUES('AFTER EACH ROW(I)',USER,'REGIONS');
        END IF;
        IF DELETING THEN
            INSERT INTO LOG_TABLE VALUES('AFTER EACH ROW(D)',USER,'REGIONS');
        END IF;
        IF UPDATING THEN
            INSERT INTO LOG_TABLE VALUES('AFTER EACH ROW(U)',USER,'REGIONS');
        END IF;
    END AFTER EACH ROW;
    
END TRIGGER5;